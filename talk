- Was erledigt
    - Implemented GUI for Car (still needs modification for truck)
    - Implemented neural network training
        - Emulator learns very well
    - Implemented Backpropagation through time for controller
        - can swap between Emulator and Jacobi-Matrix of Truck Model
            - to eliminate uncertainty caused by error in emulator
        - tested a huge amount of different lessons/hyperparameters
            - increasing the difficulty of the task is hard because of unstabilities of training
                - net can easily diverge so that the truck learns to either steer full left or full right
                - => low derivative in controller because derivative of tanh(x) for tanh(x) = 1 is 0
                - => no learning
            - tested differently weighted error functions
            - different network architectures
            - Implemented WeightInitialization according to paper by Nguyen & Widrow
            - different learning rates
    - Important: Model for Truck + Jacobian Matrix (and not emulator)
        - not sure how well it will perform => didn't have time to implement the truck visualization yet
        - Error in y-Direction: 0.11 with 1 degree uncertainty
            - Reference to Paper: 0.6 with 7 degrees
            - same model does not train with emulator => emulator has some error in derivatives
                - higher instability causing the model to diverge
- parameter
    - network architecture
        - neuron conut in hidden layer
    - Truck Model
        - 4 or 6 inputs (x, y, cabin angle, trailer angle, coupling device x, coupling device y)
    - Error Function: 
        - different weight scales
    - lessons
        - Lesson <=> 1 difficulty stage
        - very simple lessons e.g. low angle in cabin, increase x distance over multiple lessons
            - worked and minimized the errror (subject to certain limitations e.g. minimum might not be y = 0 / deg = 0)
        - difficulty increases
            - tested a lot of possible combinations
            - often unstable => truck suddenly learns to steer completely to the right
- Probleme
    - training is unstable but algorithm should be fine
        - can we talk about this/I explain my understanding of the algorithm?
        - if training becomes unstable, no learning improvement anymore
            => low derivatives in controller => because steering fully left/right causes tanh(x) = 1 => d tanh(x) / dx = 0
        - this instability was also noted in the paper/other papers using NN and this approach
        - root of problem: Over correction
    - Details Missing in the paper
        - Which truck model was used?
            - found multiple different ones...
        - Which lessons where used? (only first and last lesson are given in the paper)
            - other hyperparameters such as learning rate
        - Which truck dimensions? 
        - Wie vermeide ich Overfitting auf die Lessons?

- Tips?
- 